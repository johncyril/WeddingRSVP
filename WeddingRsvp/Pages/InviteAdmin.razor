@page "/inviteadmin"

@using WeddingRsvp.Data
@inject InviteManagementService InviteManagementService

<h1>Invites</h1>

<p>All your Wedding invites are below.</p>

@if (invites == null)
{
    <p><em>No Invites yet...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Party Name</th>
                <th>Number of people in party</th>
                <th>RSVP status</th>
                <th>Invite Code</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var invite in invites)
            {
                <tr>
                    <td>@invite.PartyName</td>
                    <td>@invite.NumberOfPeople</td>
                    <td>@invite.RsvpStatus</td>
                    <td>@invite.InviteCode</td>
                    <td @onclick="@(e => ShowModal(invite))">Edit</td>
                </tr>
            }
        </tbody>
    </table>
    <button @onclick="@(e => ShowModal(new InviteViewModel()
                        {
                            People = new List<PersonViewModel>()
                        }))">Add an Invite</button>
}

@code {

    [CascadingParameter] public IModalService Modal { get; set; }

    private InviteViewModel[] invites;

    protected override async Task OnInitializedAsync()
    {
        invites = await InviteManagementService.GetInvites();
    }

    void ShowModal(InviteViewModel invite)
    {
        var parameters = new ModalParameters();

        if (invite != null)
        {
            parameters.Add("Invite", invite);

            Modal.Show<EditInviteModal>("", parameters); ;
        }
        else
        {
            Modal.Show<EditInviteModal>("", (ModalParameters)null); 
        }
    }


}
